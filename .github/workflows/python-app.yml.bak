# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: push
  #push:
  #  branches: [ "main" ]
  #pull_request:
# BZ

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
    
      env:
        REPO_SECRET: ${{ secrets.KEYOSMBZ }}
    
      run: |
        python3 -m pip install requests
        python3 -m pip install cryptography
        python cws_read.py
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "crongenerated"
        git push
        
      #env:
        #ENV_SECRET: ${{ env.AHOJ }} 
        #REPO_SECRET: ${{ secrets.KEYOSMBZ }}

    #- name: Lint with flake8
     # run: |
        # stop the build if there are Python syntax errors or undefined names
      #  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
       #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
       # pytest
       
       #__________________________________________________________________________________
        #python -m idlelib
        #pip3 install -r requirements.txt
        #pip3 install requests
        
        
               #python -m pip install --upgrade pip
        #pip install flake8 pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi