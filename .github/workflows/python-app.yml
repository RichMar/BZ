# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

# on:
#   schedule:
    # * is a special character in YAML so you have to quote this string
    # - cron:  '30 2 * * *'
on: push


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: check main repo content
      run: |
          ls -al
    - name: Checkout wiki code
      uses: actions/checkout@v3
      with:
          repository: ${{github.repository}}.wiki    # specify the wiki repo name here.
          path: markdown
    - name: check wiki repo content
      run: |
          ls -al          
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
    
      env:
        REPO_SECRET: ${{ secrets.KEYOSMBZ }}
    
      run: |
        python3 -m pip install requests
        python3 -m pip install cryptography
        python3 -m pip install -U gpx-converter
        python3 -m pip install pandas-geojson
        python cws_read.py

    - name: Commit files
      run: |
        ls -al
        cd markdown
        ls -al
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git diff-index --cached HEAD || git commit -m "Add changes" && git push
        git status
        git push
        git status

                 
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        
    - name: Check git
      run: |
        cd markdown
        ls -al
        git status
        git show-ref
        git config user.name github-actions
        git config user.email github-actions@github.com
        git fetch origin master
        git pull origin master
        git add -A
        git commit -m "Added my project markdown"
        git push origin master
        cd ..
        ls -al
        git status
        git add -A
        git commit -m "Added my project bz"
        git push origin main
        
     #    env:
     #          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   cd markdown 
        #   git config user.name github-actions
        #   git config user.email github-actions@github.com
        #   git status -s
        #   git add .
        #   git fetch origin master:tmp
        #   git rebase tmp --autostash
        #   git diff-index --quiet HEAD || git commit -m "Add changes" && git push origin HEAD:master
        #   git branch -D tmp
   
      #   cd markdown 
      #   git config user.name github-actions
      #   git config user.email github-actions@github.com
        
      # git commit -m "crongenerated"
      # git push
        
      # env:
        # ENV_SECRET: ${{ env.AHOJ }} 
        # REPO_SECRET: ${{ secrets.KEYOSMBZ }}

    #- name: Lint with flake8
     # run: |
        # stop the build if there are Python syntax errors or undefined names
      #  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
       #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
       # pytest
       
       #__________________________________________________________________________________
        #python -m idlelib
        #pip3 install -r requirements.txt
        #pip3 install requests
        
        
               #python -m pip install --upgrade pip
        #pip install flake8 pytest
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
